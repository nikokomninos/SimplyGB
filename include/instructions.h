#pragma once

#include <common.h>
#include <cpu.h>

// 0x00
void LD_BC_NN(CPU &cpu, MMU &mmu); // 0x01
void LD_BC_A(CPU &cpu, MMU &mmu); // 0x02
void INC_BC(CPU &cpu); // 0x03
void INC_B(CPU &cpu); // 0x04
void DEC_B(CPU &cpu); // 0x05
void LD_B_N(CPU &cpu, MMU &mmu); // 0x06
void RLCA(CPU &cpu); // 0x07
void LD_NN_SP(CPU &cpu, MMU &mmu); // 0x08
void ADD_HL_BC(CPU &cpu); // 0x09
void LD_A_BC(CPU &cpu, MMU &mmu); // 0x0A
void DEC_BC(CPU &cpu); // 0x0B
void INC_C(CPU &cpu); // 0x0C
void DEC_C(CPU &cpu); // 0x0D
void LD_C_N(CPU &cpu, MMU &mmu); // 0x0E
void RRCA(CPU &cpu); // 0x0F
// 0x10
void LD_DE_NN(CPU &cpu, MMU &mmu); // 0x11
void LD_DE_A(CPU &cpu, MMU &mmu); // 0x12
void INC_DE(CPU &cpu); // 0x13
void INC_D(CPU &cpu); // 0x14
void DEC_D(CPU &cpu); // 0x15
void LD_D_N(CPU &cpu, MMU &mmu); // 0x16
void RLA(CPU &cpu); // 0x17
// 0x18
void ADD_HL_DE(CPU &cpu); // 0x19
void LD_A_DE(CPU &cpu, MMU &mmu); // 0x1A
void DEC_DE(CPU &cpu); // 0x1B
void INC_E(CPU &cpu); // 0x1C
void DEC_E(CPU &cpu); // 0x1D
void LD_E_N(CPU &cpu, MMU &mmu); // 0x1E
void RRA(CPU &cpu); // 0x1F
// 0x20
void LD_HL_NN(CPU &cpu, MMU &mmu); // 0x21
// 0x22
void INC_HL(CPU &cpu); // 0x23
void INC_H(CPU &cpu); // 0x24
void DEC_H(CPU &cpu); // 0x25
void LD_H_N(CPU &cpu, MMU &mmu); // 0x26
// 0x27
// 0x28
void ADD_HL_HL(CPU &cpu); // 0x29
// 0x2A
void DEC_HL(CPU &cpu); // 0x2B
void INC_L(CPU &cpu); // 0x2C
void DEC_L(CPU &cpu); // 0x2D
void LD_L_N(CPU &cpu, MMU &mmu); // 0x2E
void CPL(CPU & cpu); // 0x2F
// 0x30
void LD_SP_NN(CPU &cpu, MMU &mmu); // 0x31
// 0x32
void INC_SP(CPU &cpu); // 0x33
void INC_HL(CPU &cpu, MMU &mmu); // 0x34
// 0x35
void LD_HL_N(CPU &cpu, MMU &mmu); // 0x36
void SCF(CPU &cpu); // 0x37
// 0x38
void ADD_HL_SP(CPU &cpu); // 0x39
// 0x3A
void DEC_SP(CPU &cpu); // 0x3B
void INC_A(CPU &cpu); // 0x3C
void DEC_A(CPU &cpu); // 0x3D
// 0x3E
void CCF(CPU &cpu); // 0x3F
void LD_B_B(CPU &cpu); // 0x40
void LD_B_C(CPU &cpu); // 0x41
void LD_B_D(CPU &cpu); // 0x42
void LD_B_E(CPU &cpu); // 0x43
void LD_B_H(CPU &cpu); // 0x44
void LD_B_L(CPU &cpu); // 0x45
void LD_B_HL(CPU &cpu, MMU &mmu); // 0x46
// 0x47
void LD_C_B(CPU &cpu); // 0x48
void LD_C_C(CPU &cpu); // 0x49
void LD_C_D(CPU &cpu); // 0x4A
void LD_C_E(CPU &cpu); // 0x4B
void LD_C_H(CPU &cpu); // 0x4C
void LD_C_L(CPU &cpu); // 0x4D
void LD_C_HL(CPU &cpu, MMU &mmu); // 0x4E
// 0x4F
void LD_D_B(CPU &cpu); // 0x50
void LD_D_C(CPU &cpu); // 0x51
void LD_D_D(CPU &cpu); // 0x52
void LD_D_E(CPU &cpu); // 0x53
void LD_D_H(CPU &cpu); // 0x54
void LD_D_L(CPU &cpu); // 0x55
void LD_D_HL(CPU &cpu, MMU &mmu); // 0x56
// 0x57
void LD_E_B(CPU &cpu); // 0x58
void LD_E_C(CPU &cpu); // 0x59
void LD_E_D(CPU &cpu); // 0x5A
void LD_E_E(CPU &cpu); // 0x5B
void LD_E_H(CPU &cpu); // 0x5C
void LD_E_L(CPU &cpu); // 0x5D
void LD_E_HL(CPU &cpu, MMU &mmu); // 0x5E
// 0x5F
void LD_H_B(CPU &cpu); // 0x60
void LD_H_C(CPU &cpu); // 0x61
void LD_H_D(CPU &cpu); // 0x62
void LD_H_E(CPU &cpu); // 0x63
void LD_H_H(CPU &cpu); // 0x64
void LD_H_L(CPU &cpu); // 0x65
void LD_H_HL(CPU &cpu, MMU &mmu); // 0x66
// 0x67
void LD_L_B(CPU &cpu); // 0x68
void LD_L_C(CPU &cpu); // 0x69
void LD_L_D(CPU &cpu); // 0x6A
void LD_L_E(CPU &cpu); // 0x6B
void LD_L_H(CPU &cpu); // 0x6C
void LD_L_L(CPU &cpu); // 0x6D
void LD_L_HL(CPU &cpu, MMU &mmu); // 0x6E
// 0x6F
void LD_HL_B(CPU &cpu, MMU &mmu); // 0x70
void LD_HL_C(CPU &cpu, MMU &mmu); // 0x71
void LD_HL_D(CPU &cpu, MMU &mmu); // 0x72
void LD_HL_E(CPU &cpu, MMU &mmu); // 0x73
void LD_HL_H(CPU &cpu, MMU &mmu); // 0x74
void LD_HL_L(CPU &cpu, MMU &mmu); // 0x75
// 0x76
// 0x77
void LD_A_B(CPU &cpu); // 0x78
void LD_A_C(CPU &cpu); // 0x79
void LD_A_D(CPU &cpu); // 0x7A
void LD_A_E(CPU &cpu); // 0x7B
void LD_A_H(CPU &cpu); // 0x7C
void LD_A_L(CPU &cpu); // 0x7D
void LD_A_HL(CPU &cpu, MMU &mmu); // 0x7E
void LD_A_A(CPU &cpu); // 0x7F
void ADD_A_B(CPU &cpu); // 0x80
void ADD_A_C(CPU &cpu); // 0x81
void ADD_A_D(CPU &cpu); // 0x82
void ADD_A_E(CPU &cpu); // 0x83
void ADD_A_H(CPU &cpu); // 0x84
void ADD_A_L(CPU &cpu); // 0x85
void ADD_A_HL(CPU &cpu, MMU &mmu); // 0x86
void ADD_A_A(CPU &cpu); // 0x87
void ADC_A_B(CPU &cpu); // 0x88
void ADC_A_C(CPU &cpu); // 0x89
void ADC_A_D(CPU &cpu); // 0x8A
void ADC_A_E(CPU &cpu); // 0x8B
void ADC_A_H(CPU &cpu); // 0x8C
void ADC_A_L(CPU &cpu); // 0x8D
void ADC_A_HL(CPU &cpu, MMU &mmu); // 0x8E
void ADC_A_A(CPU &cpu); // 0x8F
void SUB_A_B(CPU &cpu); // 0x90
void SUB_A_C(CPU &cpu); // 0x91
void SUB_A_D(CPU &cpu); // 0x92
void SUB_A_E(CPU &cpu); // 0x93
void SUB_A_H(CPU &cpu); // 0x94
void SUB_A_L(CPU &cpu); // 0x95
void SUB_A_HL(CPU &cpu, MMU &mmu); // 0x96
void SUB_A_A(CPU &cpu); // 0x97
void SBC_A_B(CPU &cpu); // 0x98
void SBC_A_C(CPU &cpu); // 0x99
void SBC_A_D(CPU &cpu); // 0x9A
void SBC_A_E(CPU &cpu); // 0x9B
void SBC_A_H(CPU &cpu); // 0x9C
void SBC_A_L(CPU &cpu); // 0x9D
void SBC_A_HL(CPU &cpu, MMU &mmu); // 0x9E
void SBC_A_A(CPU &cpu); // 0x9F
void AND_B(CPU &cpu); // 0xA0
void AND_C(CPU &cpu); // 0xA1
void AND_D(CPU &cpu); // 0xA2
void AND_E(CPU &cpu); // 0xA3
void AND_H(CPU &cpu); // 0xA4
void AND_L(CPU &cpu); // 0xA5
void AND_HL(CPU &cpu, MMU &mmu); // 0xA6
void AND_A(CPU &cpu); // 0xA7
void XOR_B(CPU &cpu); // 0xA8
void XOR_C(CPU &cpu); // 0xA9
void XOR_D(CPU &cpu); // 0xAA
void XOR_E(CPU &cpu); // 0xAB
void XOR_H(CPU &cpu); // 0xAC
void XOR_L(CPU &cpu); // 0xAD
void XOR_HL(CPU &cpu, MMU &mmu); // 0xAE
void XOR_A(CPU &cpu); // 0xAF
void OR_B(CPU &cpu); // 0xB0
void OR_C(CPU &cpu); // 0xB1
void OR_D(CPU &cpu); // 0xB2
void OR_E(CPU &cpu); // 0xB3
void OR_H(CPU &cpu); // 0xB4
void OR_L(CPU &cpu); // 0xB5
void OR_HL(CPU &cpu, MMU &mmu); // 0xB6
void OR_A(CPU &cpu); // 0xB7
void CP_B(CPU &cpu); // 0xB8
void CP_C(CPU &cpu); // 0xB9
void CP_D(CPU &cpu); // 0xBA
void CP_E(CPU &cpu); // 0xBB
void CP_H(CPU &cpu); // 0xBC
void CP_L(CPU &cpu); // 0xBD
// 0xBE
void CP_A(CPU &cpu); // 0xBF
// 0xC0
void POP_BC(CPU &cpu); // 0xC1
// 0xC2
// 0xC3
// 0xC4
void PUSH_BC(CPU &cpu); // 0xC5
void ADD_A_N(CPU &cpu, MMU &mmu); // 0xC6
// 0xC7
// 0xC8
// 0xC9
// 0xCA
// 0xCB
// 0xCC
// 0xCD
void ADC_A_N(CPU &cpu, MMU &mmu); // 0xCE
// 0xCF
// 0xD0
void POP_DE(CPU &cpu); // 0xD1
// 0xD2
// 0xD3
// 0xD4
void PUSH_DE(CPU &cpu); // 0xD5
void SUB_A_N(CPU &cpu, MMU &mmu); // 0xD6
// 0xD7
// 0xD8
// 0xD9
// 0xDA
// 0xDB
// 0xDC
// 0xDD
void SBC_A_N(CPU &cpu, MMU &mmu); // 0xDE
// 0xDF
// 0xE0
void POP_HL(CPU &cpu); // 0xE1
void LDH_C_A(CPU &cpu, MMU &mmu); // 0xE2
// 0xE3
// 0xE4
void PUSH_HL(CPU &cpu); // 0xE5
void AND_N(CPU &cpu, MMU &mmu); // 0xE6
// 0xE7
void ADD_SP_E(CPU &cpu, MMU &mmu); // 0xE8
// 0xE9
void LD_NN_A(CPU &cpu, MMU &mmu); // 0xEA
// 0xEB
// 0xEC
// 0xED
void XOR_N(CPU &cpu, MMU &mmu); // 0xEE
// 0xEF
void LDH_A_N(CPU &cpu, MMU &mmu); // 0xF0
void POP_AF(CPU &cpu); // 0xF1
void LDH_A_C(CPU &cpu, MMU &mmu); // 0xF2
// 0xF3
// 0xF4
void PUSH_AF(CPU &cpu); // 0xF5
void OR_N(CPU &cpu, MMU &mmu); // 0xF6
// 0xF7
void LD_HL_SP_PLUS_E(CPU &cpu, MMU &mmu); // 0xF8
void LD_SP_HL(CPU &cpu, MMU &mmu); // 0xF9
void LD_A_NN(CPU &cpu, MMU &mmu); // 0xFA
// 0xFB
// 0xFC
// 0xFD
void CP_N(CPU &cpu, MMU &mmu); // 0xFE
// 0xFF


//0xCB00
//0xCB01
//0xCB02
//0xCB03
//0xCB04
//0xCB05
//0xCB06
//0xCB07
//0xCB08
//0xCB09
//0xCB0A
//0xCB0B
//0xCB0C
//0xCB0D
//0xCB0E
//0xCB0F
//0xCB10
//0xCB11
//0xCB12
//0xCB13
//0xCB14
//0xCB15
//0xCB16
//0xCB17
//0xCB18
//0xCB19
//0xCB1A
//0xCB1B
//0xCB1C
//0xCB1D
//0xCB1E
//0xCB1F
//0xCB20
//0xCB21
//0xCB22
//0xCB23
//0xCB24
//0xCB25
//0xCB26
//0xCB27
//0xCB28
//0xCB29
//0xCB2A
//0xCB2B
//0xCB2C
//0xCB2D
//0xCB2E
//0xCB2F
//0xCB30
//0xCB31
//0xCB32
//0xCB33
//0xCB34
//0xCB35
//0xCB36
//0xCB37
//0xCB38
//0xCB39
//0xCB3A
//0xCB3B
//0xCB3C
//0xCB3D
//0xCB3E
//0xCB3F
//0xCB40
//0xCB41
//0xCB42
//0xCB43
//0xCB44
//0xCB45
//0xCB46
//0xCB47
//0xCB48
//0xCB49
//0xCB4A
//0xCB4B
//0xCB4C
//0xCB4D
//0xCB4E
//0xCB4F
//0xCB50
//0xCB51
//0xCB52
//0xCB53
//0xCB54
//0xCB55
//0xCB56
//0xCB57
//0xCB58
//0xCB59
//0xCB5A
//0xCB5B
//0xCB5C
//0xCB5D
//0xCB5E
//0xCB5F
//0xCB60
//0xCB61
//0xCB62
//0xCB63
//0xCB64
//0xCB65
//0xCB66
//0xCB67
//0xCB68
//0xCB69
//0xCB6A
//0xCB6B
//0xCB6C
//0xCB6D
//0xCB6E
//0xCB6F
//0xCB70
//0xCB71
//0xCB72
//0xCB73
//0xCB74
//0xCB75
//0xCB76
//0xCB77
//0xCB78
//0xCB79
//0xCB7A
//0xCB7B
//0xCB7C
//0xCB7D
//0xCB7E
//0xCB7F
//0xCB80
//0xCB81
//0xCB82
//0xCB83
//0xCB84
//0xCB85
//0xCB86
//0xCB87
//0xCB88
//0xCB89
//0xCB8A
//0xCB8B
//0xCB8C
//0xCB8D
//0xCB8E
//0xCB8F
//0xCB90
//0xCB91
//0xCB92
//0xCB93
//0xCB94
//0xCB95
//0xCB96
//0xCB97
//0xCB98
//0xCB99
//0xCB9A
//0xCB9B
//0xCB9C
//0xCB9D
//0xCB9E
//0xCB9F
//0xCBA0
//0xCBA1
//0xCBA2
//0xCBA3
//0xCBA4
//0xCBA5
//0xCBA6
//0xCBA7
//0xCBA8
//0xCBA9
//0xCBAA
//0xCBAB
//0xCBAC
//0xCBAD
//0xCBAE
//0xCBAF
//0xCBB0
//0xCBB1
//0xCBB2
//0xCBB3
//0xCBB4
//0xCBB5
//0xCBB6
//0xCBB7
//0xCBB8
//0xCBB9
//0xCBBA
//0xCBBB
//0xCBBC
//0xCBBD
//0xCBBE
//0xCBBF
//0xCBC0
//0xCBC1
//0xCBC2
//0xCBC3
//0xCBC4
//0xCBC5
//0xCBC6
//0xCBC7
//0xCBC8
//0xCBC9
//0xCBCA
//0xCBCB
//0xCBCC
//0xCBCD
//0xCBCE
//0xCBCF
//0xCBD0
//0xCBD1
//0xCBD2
//0xCBD3
//0xCBD4
//0xCBD5
//0xCBD6
//0xCBD7
//0xCBD8
//0xCBD9
//0xCBDA
//0xCBDB
//0xCBDC
//0xCBDD
//0xCBDE
//0xCBDF
//0xCBE0
//0xCBE1
//0xCBE2
//0xCBE3
//0xCBE4
//0xCBE5
//0xCBE6
//0xCBE7
//0xCBE8
//0xCBE9
//0xCBEA
//0xCBEB
//0xCBEC
//0xCBED
//0xCBEE
//0xCBEF
//0xCBF0
//0xCBF1
//0xCBF2
//0xCBF3
//0xCBF4
//0xCBF5
//0xCBF6
//0xCBF7
//0xCBF8
//0xCBF9
//0xCBFA
//0xCBFB
//0xCBFC
//0xCBFD
//0xCBFE
//0xCBFF
